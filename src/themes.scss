@use "sass:map";
//@use "@material/theme/mdc-theme";
@use '@angular/material' as mat;
// @use "@material/theme";

/* @use "@material/theme" with (
  $primary: red,
  $secondary: #76ff03,
  $background: #fff,
);
@use "@material/top-app-bar/mdc-top-app-bar";
*/

//@use "@material/list/evolution-mixins" as list;

//@include list.core-styles();

/* @use "@material/theme" with (
  $primary: #0065b3,
  $secondary: #76ff03,
  $background: #fff,
); */

  //@debug "Color: #{$me}";



@include mat.core();

body {
  --my-primary-color: red;
}

$cyan-palette: (
  50: #e0edf6,
  100: #b3d1e8,
  200: #80b2d9,
  300: #4d93ca,
  400: #267cbe,
  500: var(--my-primary-color),
  //500: #0065b3,
  600: #005dac,
  700: #0053a3,
  800: #00499a,
  900: #00378b,
  A100: #b7ceff,
  A200: #84abff,
  A400: #5188ff,
  A700: #3777ff,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A400: rgba(black, 0.87),
    A700: white,
  )
);


/* main {
--roman: red;
} */



$my-primary: mat.define-palette($cyan-palette);
//$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);

// The "warn" palette is optional and defaults to red if not specified.
$my-warn: mat.define-palette(mat.$red-palette);

$my-theme: mat.define-light-theme((
 color: (
   primary: $my-primary,
   accent: $my-accent,
   warn: $my-warn,
 ),
 typography: mat.define-typography-config(),
 //typography: $typography-config,
 density: 0, 
));


//$mdc-theme-primary: mat.get-color-from-palette($my-primary);
// $mdc-theme-primary: #0065b3;
//$mdc-theme-primary: red;
//--mdc-theme-primary: red;

  //@include list.deprecated-item-selected-text-color(#0065b3);
  //@include list.list-selected-ink-color(#0065b3);
  //@include list.list-selected-meta-text-ink-color(#0065b3);

/* .mdc-list-item {
  //	--mdc-theme-primary: var(--my-primary-color);
    //--mdc-theme-on-primary: var(--mdc-theme-text-primary-on-light);
    //--mdc-theme-accent: darksalmon;
}
 */
// $mdc-theme-secondary: #f00;
// $mdc-theme-accent: mat.get-color-from-palette($my-accent);
//$mdc-theme-secondary: mat.get-color-from-palette($my-accent);

// // $mdc-theme-accent: #76ff03;
// $mdc-theme-warn: #fff;
//$mdc-theme-background: #fff; // White 

//@import "@material/theme/mdc-theme";


//@debug "Color: #{$myprim}";
//@debug "Color: #{mat.get-color-from-palette($my-primary)}";
//@debug "Color: #{mat.get-theme-color($my-theme, primary, 500)}";
//@debug "Color: #{var(--mdc-theme-primary)}";
//@debug "Color: #{--mdc-theme-primary}";

body {

  // Emit theme-dependent styles for common features used across multiple components.
//@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
//@include mat.button-theme($my-theme);
//@include toolbar-theme.theme($theme);
// Include the theme mixins for other components you use here.

//src/material/core/theming/_all-theme.scss to see the mixin all-component-themes:
  @include mat.all-component-themes($my-theme);

  --mdc-theme-primary: var(--my-primary-color)
}

body {
  //--my-primary-color: red;
//  --my-primary-color: mat.get-theme-color($my-theme, primary, 500);

/* @if mat.theme-has($my-theme, color) {
  @include color($my-theme);
} */

  // --my-primary-color: mat.get-color-from-palette($my-primary, 700-contrast);
	//--mdc-theme-primary: var(--my-primary-color);
    
	//--mdc-theme-primary: red;
  //--mdc-theme-primary: $aa;
}


